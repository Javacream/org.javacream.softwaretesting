booksservice_tests:

    valid_parameters_creates_isbn:
        context:
            isbngeneratorService=Dummy()
            storeService=Dummy()
            booksService=BooksService(isbngeneratorService, storeService)
        title='Testing'
        pages=100
        price=19.99
        expected_isbn = 'String'
        isbn=booksService.create(title, pages, price)
        assert_equals(expected_isbn, isbn)


    invalid_title_signals_error:
        context:
            isbngeneratorService=Dummy()
            storeService=Dummy()
            booksService=BooksService(isbngeneratorService, storeService)
        title=None
        pages=100
        price=19.99
        result=booksService.create(title, pages, price)
        assert_failure(result)

    valid_isbn_finds_book:
        context:
            isbngeneratorService=Mock()
            isbngeneratorService.expect(next()).and_return('ISBN-1-dk')
            storeService=Mock()
            storeService.expect(get_stock('books', 'ISBN-1-dk')).and_return(42)
            booksService=BooksService(isbngeneratorService, storeService)
        title='Testing'
        pages=100
        price=19.99
        isbn=booksService.create(title, pages, price)
        book=booksService.find_by_isbn(isbn)
        assert_notnull(book)
        assert_equals(title, book.title)
        assert_true(book.available)


    
