booksservice_test_suite:
    create_test_suite:
        valid_parameters_creates_isbn:
            fixture:
                ISBN = 'Test-ISBN-12345-dk'
                isbngenerator = Mock()
                isbngenerator.expect(next()).and_return(ISBN)
                storeservice = Dummy()
                booksservice = BooksService(isbngenerator, storeservice)
                database:
                    type='mysql'
                    schema='schema.sql'
                    data='data.sql'
            title='Testing'
            pages=100
            price=19.99
            isbn=booksservice.create(title, pages, price)
            assert_equals(ISBN, isbn)
            isbngenerator.validate() # pr√ºft den exakt einmaligen Aufruf der next-Operation
        invalid_title_signals_error:
            fixture:
                isbngenerator = Dummy()
                storeservice = Dummy()
                booksservice = BooksService(isbngenerator, store_service) 
            title=None
            pages=100
            price=19.99
            result=booksservice.create(title, pages, price)
            assert_failure(result)

    find_by_isbn_test_suite:
        valid_isbn_finds_book:
            fixture:
                isbngenerator = Dummy()
                storeservice = Mock()
                storeservice.expect(get_stock('books', String.any)).and_return(42)
                booksservice = BooksService(isbngenerator, store_service) 
                database:
                    type='mysql'
                    schema='schema.sql'
                    data='data.sql'
            isbn='ISBN-1-dk'
            result=booksservice.find_by_isbn(isbn)
            assert_notnull(result)
            assert_equals('Python', result.title)
            assert_true(result.available)

        valid_isbn_finds_book_if_book_is_created:
            fixture:
                isbngenerator = Dummy()
                storeservice = Mock()
                storeservice.expect(get_stock('books', String.any)).and_return(42)
                booksservice = BooksService(isbngenerator, store_service) 
            title='Testing'
            pages=100
            price=19.99
            isbn=booksservice.create(title, pages, price)
            book=booksservice.find_by_isbn(isbn)
            assert_notnull(book)
            assert_true(book.available)

    find_all_test_suite:
        fixture:
            isbngenerator = Dummy()
            storeservice = Dummy()
            booksservice = BooksService(isbngenerator, store_service)
        #TODO
    update_test_suite:
        fixture:
            isbngenerator = Dummy()
            storeservice = Dummy()
            booksservice = BooksService(isbngenerator, store_service) 
        #TODO
    delete_by_isbn_test_suite:
        fixture:
            isbngenerator = Dummy()
            storeservice = Dummy()
            booksservice = BooksService(isbngenerator, store_service) 
        #TODO

    